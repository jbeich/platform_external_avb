{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cfcb8fcf_3a27bc61",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1078119
      },
      "writtenOn": "2023-09-06T15:28:43Z",
      "side": 1,
      "message": "+zeuthen@ for owner review - I figured it would be easier to do the Rust review ahead of time and add you after we think it\u0027s in good shape, but LMK if a different workflow would be better for you. Thanks!",
      "revId": "578b4cdcdefa378a2e5d522c65dd1a5590f5367c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aca971c4_42894c59",
        "filename": "rust/src/verify.rs",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2023-09-07T08:45:27Z",
      "side": 1,
      "message": "This should be part of the API of this library. Can we expose it in lib.rs?",
      "range": {
        "startLine": 35,
        "startChar": 10,
        "endLine": 35,
        "endChar": 13
      },
      "revId": "578b4cdcdefa378a2e5d522c65dd1a5590f5367c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0289e669_d49daa51",
        "filename": "rust/src/verify.rs",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2023-09-07T08:45:27Z",
      "side": 1,
      "message": "Not related to this cl: @zeuthen@google.com\nI remember that in libavb, we used a negative offset to read the AVB footer and a positive offset to read the partition content. However, during my work on this, there was no verification to ensure that the total length of the data (partition content length + AVB footer length) is correct.\n\nThis means, if there\u0027s any additional data between the partition content and the AVB footer, it would go unnoticed. Should we add a check to ensure that the total length of the data is correct?",
      "range": {
        "startLine": 51,
        "startChar": 8,
        "endLine": 51,
        "endChar": 14
      },
      "revId": "578b4cdcdefa378a2e5d522c65dd1a5590f5367c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7126127_8b04f05c",
        "filename": "rust/src/verify.rs",
        "patchSetId": 4
      },
      "lineNbr": 165,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2023-09-07T08:45:27Z",
      "side": 1,
      "message": "Since the callback is so long, can we just create a normal function `try_...() -\u003e Result\u003c..\u003e` instead of nesting it here?\n\nSame for the function below.",
      "range": {
        "startLine": 165,
        "startChar": 23,
        "endLine": 165,
        "endChar": 27
      },
      "revId": "578b4cdcdefa378a2e5d522c65dd1a5590f5367c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}