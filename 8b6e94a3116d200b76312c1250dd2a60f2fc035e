{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4e9e0f03_984591b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1897307
      },
      "writtenOn": "2022-12-20T18:37:17Z",
      "side": 1,
      "message": "WIP: some more failing tests",
      "revId": "8b6e94a3116d200b76312c1250dd2a60f2fc035e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3e40c2c_9ff90a5e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2022-12-20T19:29:47Z",
      "side": 1,
      "message": "I think this is coming from a good place (SHA256 is better than SHA1 etc.) but we can\u0027t really do this as per https://android.googlesource.com/platform/external/avb/+/master/README.md#Versioning-and-Compatibility as it\u0027s a specific goal that we want users to be able to upgrade to a more recent `avbtool` without any underlying changes.\n\nFor example this would break existing installations that don\u0027t specify `--hash_algorithm` as they\u0027d be getting SHA1 now and SHA256 after this change.",
      "revId": "8b6e94a3116d200b76312c1250dd2a60f2fc035e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a3365b6_ac8ad578",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1897307
      },
      "writtenOn": "2022-12-20T20:14:20Z",
      "side": 1,
      "message": "As I understand it, avbtool.py is a hostside tool.\n\nThis would definitely change the build artifacts which use default hash_algo because their vbmeta will have different hash (evident in the unit tests changes in this patch). But is changed artifacts considered an incompatible update? If it is just about verification, libavb already checks for hash_algorthm present in the descriptor before using the hash (for verification)- cs/android-internal/external/avb/libavb/avb_slot_verify.c?l\u003d399-415. Unless any old version of libavb didn\u0027t check it, this change should be compatible with verification.\n\nI was also wondering why only add_hashtree_footer uses the default sha1, others like `add_hash_footer` uses  sha256 as the default hash.",
      "parentUuid": "e3e40c2c_9ff90a5e",
      "revId": "8b6e94a3116d200b76312c1250dd2a60f2fc035e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "271957dd_a96302a5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2022-12-20T21:37:32Z",
      "side": 1,
      "message": "The reason `sha1` is used is purely historical.\n\nThere might be other tools/processes in the chain that might choke if the hashing algorithm is suddenly changed, including on the device itself (for example it\u0027s possible the bootloader didn\u0027t wire up sha256 support for libavb correctly). So I\u0027m afraid it\u0027s a no-no to do this, sorry.\n\nIs there any particular reason why you are interested in changing the default? If you want to use `sha256` somewhere just use the `--hash-algorithm` option...",
      "parentUuid": "1a3365b6_ac8ad578",
      "revId": "8b6e94a3116d200b76312c1250dd2a60f2fc035e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd880a79_59986973",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1897307
      },
      "writtenOn": "2022-12-21T11:35:36Z",
      "side": 1,
      "message": "Gotcha. There is no particular necessity of changing the default. We figured some of the images in Microdroid do not explicitly set --hash-algorithm \u0026 rely on default \u0026 was surprised to see it being sha1 \u0026 thought of changing the default. But, since it is backward incompatible, I\u0027ll abandon this patch \u0026 fallback to adding this option in build system to add the flag.",
      "parentUuid": "271957dd_a96302a5",
      "revId": "8b6e94a3116d200b76312c1250dd2a60f2fc035e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "530d5dd6_0967701a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2022-12-22T14:40:30Z",
      "side": 1,
      "message": "\u003e Microdroid do not explicitly set --hash-algorithm \u0026 rely on default \u0026 was surprised to see it being sha1 \n\nMaybe we can consider adding a test to check sha1 is not used in Microdroid?\n\ne.g., in Android, the check is done via:\nhttps://cs.android.com/android/platform/superproject/+/master:cts/tests/tests/security/native/verified_boot/VerifiedBootTest.cpp;l\u003d99?q\u003davbHashtreeNotUsingSha1",
      "parentUuid": "cd880a79_59986973",
      "revId": "8b6e94a3116d200b76312c1250dd2a60f2fc035e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98b187f4_5e8969d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1897307
      },
      "writtenOn": "2023-01-03T05:13:36Z",
      "side": 1,
      "message": "Thats a good idea. Creating a bug",
      "parentUuid": "530d5dd6_0967701a",
      "revId": "8b6e94a3116d200b76312c1250dd2a60f2fc035e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}