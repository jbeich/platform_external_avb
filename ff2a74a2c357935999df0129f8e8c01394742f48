{
  "comments": [
    {
      "key": {
        "uuid": "69224620_63afec88",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 1996,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "Update documentation\n- log_url\n- signed_root_blob\n- proofs",
      "range": {
        "startLine": 1996,
        "startChar": 0,
        "endLine": 1996,
        "endChar": 13
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "309e4458_c5574d1b",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 1996,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69224620_63afec88",
      "range": {
        "startLine": 1996,
        "startChar": 0,
        "endLine": 1996,
        "endChar": 13
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26bcdc2f_eb282e93",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2030,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "Directly call get_expected_size() to get the value.",
      "range": {
        "startLine": 2030,
        "startChar": 24,
        "endLine": 2030,
        "endChar": 100
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8148b8bf_c5a9118c",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2030,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26bcdc2f_eb282e93",
      "range": {
        "startLine": 2030,
        "startChar": 24,
        "endLine": 2030,
        "endChar": 100
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9e3d525_5ff5bf13",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2039,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "The more elegant way of doing the parsing is to define a FORMAT_STRING dynamically of the header data that you read from the header and then use struct.unpack to parse it. That will also take care of checking that the underlay blob that is being parsed has the right length. If the length does not match the format string you will get a struct.error.\n\nThat should make things easier maintain and make it more readable.\n\nExample:\n\n\u003e\u003e\u003e FS\u003d\u002710s\u0027\n\u003e\u003e\u003e struct.unpack(FS, \u0027aaaaaaaaa\u0027)\nTraceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\nstruct.error: unpack requires a string argument of length 10\n\u003e\u003e\u003e struct.unpack(FS, \u0027aaaaaaaaaa\u0027)\n(\u0027aaaaaaaaaa\u0027,)\n\n\n\u003e\u003e\u003e FS\u003d\u00275s5s\u0027\n\u003e\u003e\u003e struct.unpack(FS, \u0027aaaaa\u0027)\nTraceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\nstruct.error: unpack requires a string argument of length 10\n\u003e\u003e\u003e struct.unpack(FS, \u0027aaaaaaaaaa\u0027)\n(\u0027aaaaa\u0027, \u0027aaaaa\u0027)\n\u003e\u003e\u003e struct.unpack(FS, \u0027aaaaaaaaa\u0027)\nTraceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\nstruct.error: unpack requires a string argument of length 10",
      "range": {
        "startLine": 2029,
        "startChar": 0,
        "endLine": 2039,
        "endChar": 65
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38adac72_7a5e76e3",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2039,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9e3d525_5ff5bf13",
      "range": {
        "startLine": 2029,
        "startChar": 0,
        "endLine": 2039,
        "endChar": 65
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50ee0343_cfd269bf",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2043,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "log_url, signed_root_blob, proofs are all variable sized objects in Python. If you stream these here out later with the encode() function the outputted blob will be inconsistent with the header data that you have read before this if-block.\n\nhttps://docs.python.org/3.1/library/functions.html#bytearray\n\nThus, in the export() function you will need to dynamically create FORMAT_STRING and then use struct.pack to write out the bytes. That will take care of passing the strings with 0x00 or truncating them to the appropriate max size defined in the FORMAT_STRING.",
      "range": {
        "startLine": 2041,
        "startChar": 0,
        "endLine": 2043,
        "endChar": 33
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4c0cc98_7464c128",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2043,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50ee0343_cfd269bf",
      "range": {
        "startLine": 2041,
        "startChar": 0,
        "endLine": 2043,
        "endChar": 33
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ce2fc06_730f5b75",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2068,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "s/: .../: bytearray containing the SignedLogRoot for the transparency log./",
      "range": {
        "startLine": 2068,
        "startChar": 0,
        "endLine": 2068,
        "endChar": 67
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6e5d3fb_e7b6d5b8",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2068,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ce2fc06_730f5b75",
      "range": {
        "startLine": 2068,
        "startChar": 0,
        "endLine": 2068,
        "endChar": 67
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b7fde3b_5e6f9eba",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2078,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "When documenting arguments you need to make sure that developers know which datatype they can pass into the method call. Thus:\ns/.../: bytearray concatenated inclusion proof hashes/",
      "range": {
        "startLine": 2078,
        "startChar": 0,
        "endLine": 2078,
        "endChar": 56
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb4badc2_d92bdf48",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2078,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b7fde3b_5e6f9eba",
      "range": {
        "startLine": 2078,
        "startChar": 0,
        "endLine": 2078,
        "endChar": 56
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "223ece54_afa8009f",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2105,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "See earlier comment regarding the need of FORMAT_STRING and struct.pack.",
      "range": {
        "startLine": 2103,
        "startChar": 0,
        "endLine": 2105,
        "endChar": 33
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bed597e0_042f96ba",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2105,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "223ece54_afa8009f",
      "range": {
        "startLine": 2103,
        "startChar": 0,
        "endLine": 2105,
        "endChar": 33
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d519d2c_a30f6e86",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2157,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "This comment needs to be part of the class DOCSTRING between the initial sentence and the Attributes section.",
      "range": {
        "startLine": 2157,
        "startChar": 0,
        "endLine": 2157,
        "endChar": 52
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab39356a_737b9975",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2157,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d519d2c_a30f6e86",
      "range": {
        "startLine": 2157,
        "startChar": 0,
        "endLine": 2157,
        "endChar": 52
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42dd882f_f04a7839",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2161,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "I feel we need some versioning of the AvbIcpBlob (and/or the elments in it) so we can handle potential future changes to the data structures more easily.",
      "range": {
        "startLine": 2161,
        "startChar": 0,
        "endLine": 2161,
        "endChar": 13
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9137d88b_d7afaf05",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2161,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Can\u0027t the header major/minor version address that?",
      "parentUuid": "42dd882f_f04a7839",
      "range": {
        "startLine": 2161,
        "startChar": 0,
        "endLine": 2161,
        "endChar": 13
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17514c99_619319fa",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2170,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "s/a/an/.",
      "range": {
        "startLine": 2170,
        "startChar": 58,
        "endLine": 2170,
        "endChar": 59
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f80b53d_ef1a05c9",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2170,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17514c99_619319fa",
      "range": {
        "startLine": 2170,
        "startChar": 58,
        "endLine": 2170,
        "endChar": 59
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95255b26_5503cc85",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2171,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "Add \"Raises\" docstring section with AvbError.",
      "range": {
        "startLine": 2171,
        "startChar": 0,
        "endLine": 2171,
        "endChar": 7
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a1bd8b5_db080938",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2171,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "95255b26_5503cc85",
      "range": {
        "startLine": 2171,
        "startChar": 0,
        "endLine": 2171,
        "endChar": 7
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c86ef0fa_e6b02fd5",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2175,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "I would put this is_valid check as part of the constructor and the encode() method of AvbIcpHeader. That way you can ensure that when you create a AvbIcpHeader or it gets streamed out it is always in consistent state.\n\nIf you decide to adopt this change I would also do it with the other AvbIcp* objects.",
      "range": {
        "startLine": 2175,
        "startChar": 0,
        "endLine": 2175,
        "endChar": 35
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34ff2aed_e16ae3c9",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2175,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c86ef0fa_e6b02fd5",
      "range": {
        "startLine": 2175,
        "startChar": 0,
        "endLine": 2175,
        "endChar": 35
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "746183a5_94c7a5fd",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2190,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "I would make it so that you only have to call AvbIcpEntry once instead of here and in 2188. But probably will require that AvbIcpBlob knows how long the entries are in size. WDYT?",
      "range": {
        "startLine": 2189,
        "startChar": 0,
        "endLine": 2190,
        "endChar": 87
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34b6d5f7_7eae8a87",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2190,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "746183a5_94c7a5fd",
      "range": {
        "startLine": 2189,
        "startChar": 0,
        "endLine": 2190,
        "endChar": 87
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6437f248_0747f220",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2192,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "Same as before. Would make the check part of the AvbIcpEntry constructor.",
      "range": {
        "startLine": 2192,
        "startChar": 0,
        "endLine": 2192,
        "endChar": 40
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7b331b8_18acc5c2",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2192,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6437f248_0747f220",
      "range": {
        "startLine": 2192,
        "startChar": 0,
        "endLine": 2192,
        "endChar": 40
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e8c9019_a6e6ee18",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2200,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "Would move this block before advancing the icp_index counter.",
      "range": {
        "startLine": 2197,
        "startChar": 0,
        "endLine": 2200,
        "endChar": 15
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5524ddcf_1aa4c5b0",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2200,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e8c9019_a6e6ee18",
      "range": {
        "startLine": 2197,
        "startChar": 0,
        "endLine": 2200,
        "endChar": 15
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6bf1d37_c29506c4",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2211,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "Document the argument.",
      "range": {
        "startLine": 2211,
        "startChar": 0,
        "endLine": 2211,
        "endChar": 78
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bbc46b2_cbf3aa3c",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2211,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6bf1d37_c29506c4",
      "range": {
        "startLine": 2211,
        "startChar": 0,
        "endLine": 2211,
        "endChar": 78
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4692a2_babd8cfb",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2214,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "s/floow/follow/",
      "range": {
        "startLine": 2214,
        "startChar": 67,
        "endLine": 2214,
        "endChar": 72
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5badd945_0ab5b73f",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2214,
      "author": {
        "id": 1079886
      },
      "writtenOn": "2019-12-05T21:43:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba4692a2_babd8cfb",
      "range": {
        "startLine": 2214,
        "startChar": 67,
        "endLine": 2214,
        "endChar": 72
      },
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5aaf617_3e548f9c",
        "filename": "avbtool",
        "patchSetId": 2
      },
      "lineNbr": 2385,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2019-12-05T13:08:36Z",
      "side": 1,
      "message": "I think you should also test that the output of the encode() function of the AvbIcp* objects matches your expectations.",
      "revId": "ff2a74a2c357935999df0129f8e8c01394742f48",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}