{
  "comments": [
    {
      "key": {
        "uuid": "d08189e4_a1e855c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-08-09T15:50:14Z",
      "side": 1,
      "message": "This creates a 1:1 mapping but Sandeep seems prefer to have the flexibility of 1-to-many mapping: b/80195851#comment5\n\nNote that in Q, we\u0027re likely to have: \n  /product\n  /product-services\n  /system\n  \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d HIDL \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n  /vendor\n  /boot\n  /ramdisk\n  /dtbo\n  /odm (optional)\n  ...\n\nI\u0027m not sure should we have 1-to-many flexibility (it seems too tricky?)\n\nNote that only \u0027chained\u0027 partitions need the vbmeta_${PART_NAME}${AB_SUFFIX}.\nWe usually \u0027chain\u0027 a partition that needs to be \"independently OTAed\u0027. Given this, having 1:1 mapping seems better fit for the independency.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 31
      },
      "revId": "dbedaf54e83a1d71cca00eab0cda9ed3212ed535",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb96f756_c3c6d4b5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2018-08-09T16:45:28Z",
      "side": 1,
      "message": "I don\u0027t see how this creates a 1:1 mapping - all it does is to make it possible to stash vbmeta in the beginning of another partition instead of in a footer. You are still completely free to store descriptors where you want, things will still work (because each descriptor themselves has a name field).",
      "parentUuid": "d08189e4_a1e855c9",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 31
      },
      "revId": "dbedaf54e83a1d71cca00eab0cda9ed3212ed535",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8655e708_f7f14a43",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-08-09T15:50:14Z",
      "side": 1,
      "message": "why this becomes mandatory?\nShouldn\u0027t get_size_of_partition() only for HASH partitions?",
      "range": {
        "startLine": 15,
        "startChar": 38,
        "endLine": 15,
        "endChar": 65
      },
      "revId": "dbedaf54e83a1d71cca00eab0cda9ed3212ed535",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4383e4c1_06312e93",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2018-08-09T16:45:28Z",
      "side": 1,
      "message": "Knowing the size of each partition is already mandatory since it\u0027s needed to implement read_from_partition() - passing a negative offset means reading from the end. So nothing new here.",
      "parentUuid": "8655e708_f7f14a43",
      "range": {
        "startLine": 15,
        "startChar": 38,
        "endLine": 15,
        "endChar": 65
      },
      "revId": "dbedaf54e83a1d71cca00eab0cda9ed3212ed535",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b497e6c_760480b7",
        "filename": "avbtool",
        "patchSetId": 1
      },
      "lineNbr": 2165,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2018-08-09T17:07:00Z",
      "side": 1,
      "message": "For a setup with detached vbmeta for system, calling verify_image on the main vbmeta or system won\u0027t actually check the contents in vbmeta_system.img. And user has to manually verify \u0027vbmeta_system.img\u0027 to verify the detached vbmeta. Shall we also look for the detached vbmeta when verifying system.img, such as additionally comparing the vbmeta structs between the two?",
      "range": {
        "startLine": 2165,
        "startChar": 6,
        "endLine": 2165,
        "endChar": 18
      },
      "revId": "dbedaf54e83a1d71cca00eab0cda9ed3212ed535",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b20f3926_2308edbc",
        "filename": "avbtool",
        "patchSetId": 1
      },
      "lineNbr": 2165,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2018-08-09T17:14:23Z",
      "side": 1,
      "message": "Ah, yeah, that\u0027s a good point, I thought I had already fixed that but apparently only in calculate_vbmeta_digest().",
      "parentUuid": "3b497e6c_760480b7",
      "range": {
        "startLine": 2165,
        "startChar": 6,
        "endLine": 2165,
        "endChar": 18
      },
      "revId": "dbedaf54e83a1d71cca00eab0cda9ed3212ed535",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "993ca468_92d63eb8",
        "filename": "avbtool",
        "patchSetId": 1
      },
      "lineNbr": 2165,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2018-08-09T17:32:44Z",
      "side": 1,
      "message": "Actually... verify_image currently doesn\u0027t follow chain partitions... that is, when it runs into a chain partition all it does is to check the provided (rollback_index_slot, public_key) which is passed via \u0027--expected_chain_partition PART_NAME:ROLLBACK_SLOT:KEY_PATH\u0027 ...\n\nAs far as I remember, the thoughts when I designed this was \"this is by design\" ... the reason being that the whole idea of chain partitions is that they\u0027re used when separating responsibility from two organizations (e.g. OEM provides vbmeta.img and vendor.img - Google provides system.img). So you\u0027d need to run \u0027avbtool verify_image\u0027 on them separately. I think that\u0027s probably fine to do. We *could* add a --follow_chain_partition option to make \u0027avbtool verify_image\u0027 follow chained partitions and it would need to be an *option* because sometimes you just don\u0027t have the chained image to follow. I think that would be a separate CL. Thoughts?\n\nHowever right now \u0027avbtool verify_image --image system.img\u0027 will not look at vbmeta_system.img. Let me definitely add support for that including test cases.",
      "parentUuid": "b20f3926_2308edbc",
      "range": {
        "startLine": 2165,
        "startChar": 6,
        "endLine": 2165,
        "endChar": 18
      },
      "revId": "dbedaf54e83a1d71cca00eab0cda9ed3212ed535",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f252d848_f2ce763a",
        "filename": "avbtool",
        "patchSetId": 1
      },
      "lineNbr": 2165,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2018-08-09T17:50:10Z",
      "side": 1,
      "message": "+1 for \"--follow_chain_partition\". I also noticed the current behavior in my previous debugging, then realized it only verified the _embedded_ descriptor against the info specified in the command line. Agreed it would be useful to be added, and as a separate feature/CL.",
      "parentUuid": "993ca468_92d63eb8",
      "range": {
        "startLine": 2165,
        "startChar": 6,
        "endLine": 2165,
        "endChar": 18
      },
      "revId": "dbedaf54e83a1d71cca00eab0cda9ed3212ed535",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9aea5fa6_dbab7278",
        "filename": "avbtool",
        "patchSetId": 1
      },
      "lineNbr": 3908,
      "author": {
        "id": 1056365
      },
      "writtenOn": "2018-08-09T17:07:00Z",
      "side": 1,
      "message": "The input image won\u0027t be modified, right?",
      "range": {
        "startLine": 3908,
        "startChar": 51,
        "endLine": 3908,
        "endChar": 57
      },
      "revId": "dbedaf54e83a1d71cca00eab0cda9ed3212ed535",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "692e38e3_0b93afe4",
        "filename": "avbtool",
        "patchSetId": 1
      },
      "lineNbr": 3908,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2018-08-09T17:14:23Z",
      "side": 1,
      "message": "Nice catch, fixing.",
      "parentUuid": "9aea5fa6_dbab7278",
      "range": {
        "startLine": 3908,
        "startChar": 51,
        "endLine": 3908,
        "endChar": 57
      },
      "revId": "dbedaf54e83a1d71cca00eab0cda9ed3212ed535",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0686032e_758a953b",
        "filename": "libavb/avb_slot_verify.c",
        "patchSetId": 1
      },
      "lineNbr": 565,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-08-09T15:50:14Z",
      "side": 1,
      "message": "Oh, please ignore my comments in the commit message.\nI got that idea of mandating get_size_of_partition().",
      "range": {
        "startLine": 564,
        "startChar": 0,
        "endLine": 565,
        "endChar": 69
      },
      "revId": "dbedaf54e83a1d71cca00eab0cda9ed3212ed535",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f06017e7_2b526e53",
        "filename": "libavb/avb_slot_verify.c",
        "patchSetId": 1
      },
      "lineNbr": 565,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2018-08-09T16:45:28Z",
      "side": 1,
      "message": "(Not sure you know but you can go back and edit/delete comment...)",
      "parentUuid": "0686032e_758a953b",
      "range": {
        "startLine": 564,
        "startChar": 0,
        "endLine": 565,
        "endChar": 69
      },
      "revId": "dbedaf54e83a1d71cca00eab0cda9ed3212ed535",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}