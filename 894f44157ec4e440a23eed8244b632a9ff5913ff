{
  "comments": [
    {
      "key": {
        "uuid": "7fded0a6_683f1f8c",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 532,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-07T08:01:26Z",
      "side": 1,
      "message": "\"\"\"Serializes the header |SIZE| and data to bytes.",
      "range": {
        "startLine": 532,
        "startChar": 50,
        "endLine": 532,
        "endChar": 59
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4cc17a3_ad15f252",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 532,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2020-05-08T09:19:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7fded0a6_683f1f8c",
      "range": {
        "startLine": 532,
        "startChar": 50,
        "endLine": 532,
        "endChar": 59
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53e4c471_12425622",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 535,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-07T08:01:26Z",
      "side": 1,
      "message": "s/.../The bytes/ or s/.../bytes/",
      "range": {
        "startLine": 535,
        "startChar": 6,
        "endLine": 535,
        "endChar": 20
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "777ce950_598cad5a",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 535,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2020-05-08T09:19:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53e4c471_12425622",
      "range": {
        "startLine": 535,
        "startChar": 6,
        "endLine": 535,
        "endChar": 20
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ad2cde0_43f329f7",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 799,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-07T08:01:26Z",
      "side": 1,
      "message": "s/encoded_value/stream/ or s/encoded_value/input_stream/ makes it clearer and consistent with tls_encode_bytes().",
      "range": {
        "startLine": 799,
        "startChar": 32,
        "endLine": 799,
        "endChar": 45
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db902f83_053a4620",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 799,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2020-05-08T09:19:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ad2cde0_43f329f7",
      "range": {
        "startLine": 799,
        "startChar": 32,
        "endLine": 799,
        "endChar": 45
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd86c1ea_603cd6ce",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 953,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-07T08:01:26Z",
      "side": 1,
      "message": "Re: version_incremental, description\n\nMy approach in the py3 migration has been to keep strings as strings within python and handle the decoding/encoding to bytes as part of the decode()/encode() functions. Otherwise, if you have multiple entry points for the string into the tool the dev will use what ever encoding that comes to their mind and it will become inconsistent.\n\nI followed the priciple that was described in the \"The Unicode Sandwich\" section here:\nhttps://medium.com/better-programming/strings-unicode-and-bytes-in-python-3-everything-you-always-wanted-to-know-27dc02ff2686",
      "range": {
        "startLine": 953,
        "startChar": 38,
        "endLine": 953,
        "endChar": 57
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f98ca29_74c36cd6",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 953,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2020-05-08T09:19:51Z",
      "side": 1,
      "message": "Good point. Done.",
      "parentUuid": "cd86c1ea_603cd6ce",
      "range": {
        "startLine": 953,
        "startChar": 38,
        "endLine": 953,
        "endChar": 57
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f809a48_f9cd5413",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 962,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-07T08:01:26Z",
      "side": 1,
      "message": "s/encoded_annotation/stream/ or s/encoded_annotation/input_stream/. It makes it clearer that this is just reading from a stream and not from a fixed size chunk of data just containing the annotation.\n\nPls adjust elsewhere too.",
      "range": {
        "startLine": 962,
        "startChar": 17,
        "endLine": 962,
        "endChar": 35
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ad936e0_6cb72b86",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 962,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2020-05-08T09:19:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f809a48_f9cd5413",
      "range": {
        "startLine": 962,
        "startChar": 17,
        "endLine": 962,
        "endChar": 35
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "624545a4_fa02d68c",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1052,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-07T08:01:26Z",
      "side": 1,
      "message": "This also needs a decode. Though, as I recommended earlier, I would keep version_incremental and description as str() inside of python. Then you would not need to decode here.",
      "range": {
        "startLine": 1052,
        "startChar": 49,
        "endLine": 1052,
        "endChar": 60
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bce301a8_52f4b02e",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1052,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2020-05-08T09:19:51Z",
      "side": 1,
      "message": "Ack, done as described above.",
      "parentUuid": "624545a4_fa02d68c",
      "range": {
        "startLine": 1052,
        "startChar": 49,
        "endLine": 1052,
        "endChar": 60
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4b1178_92a1dc91",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1073,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-07T08:01:26Z",
      "side": 1,
      "message": "Same here.",
      "range": {
        "startLine": 1073,
        "startChar": 17,
        "endLine": 1073,
        "endChar": 42
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d0de591_6791adcf",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1073,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2020-05-08T09:19:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c4b1178_92a1dc91",
      "range": {
        "startLine": 1073,
        "startChar": 17,
        "endLine": 1073,
        "endChar": 42
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e836a6ce_175c8bfa",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1122,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-07T08:01:26Z",
      "side": 1,
      "message": "Same here.",
      "range": {
        "startLine": 1122,
        "startChar": 25,
        "endLine": 1122,
        "endChar": 37
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c220ce25_caab0853",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1122,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2020-05-08T09:19:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e836a6ce_175c8bfa",
      "range": {
        "startLine": 1122,
        "startChar": 25,
        "endLine": 1122,
        "endChar": 37
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e96a60d_35ff2b92",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1151,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-07T08:01:26Z",
      "side": 1,
      "message": "Same here.",
      "range": {
        "startLine": 1151,
        "startChar": 17,
        "endLine": 1151,
        "endChar": 21
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "182a1c45_f8f61c7c",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1151,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2020-05-08T09:19:51Z",
      "side": 1,
      "message": "The interface is slightly different here, it is expecting a bytes and not a BytesIO. That\u0027s why I kept the data name.\nOn one hand, this is different from the other `parse`, but on the other hand, it make the call to this `parse` easier.\nWDYT?",
      "parentUuid": "7e96a60d_35ff2b92",
      "range": {
        "startLine": 1151,
        "startChar": 17,
        "endLine": 1151,
        "endChar": 21
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "246cc451_6743f091",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1151,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-11T05:51:31Z",
      "side": 1,
      "message": "Hmmm, I see. No strong opinion at this point. Let\u0027s keep it as is for the moment.",
      "parentUuid": "182a1c45_f8f61c7c",
      "range": {
        "startLine": 1151,
        "startChar": 17,
        "endLine": 1151,
        "endChar": 21
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76e92caa_1ec37ebc",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1159,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-07T08:01:26Z",
      "side": 1,
      "message": "Needs \"Returns:\" section.",
      "range": {
        "startLine": 1159,
        "startChar": 0,
        "endLine": 1159,
        "endChar": 7
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d70446b_5d89fecb",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1159,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-07T08:01:26Z",
      "side": 1,
      "message": "Probably good also to specify the \"Raises\"\" that this method will raise an AftlError. Pls also fix elsewhere.",
      "range": {
        "startLine": 1159,
        "startChar": 6,
        "endLine": 1159,
        "endChar": 7
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "951e250c_d269c12d",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1159,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2020-05-08T09:19:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d70446b_5d89fecb",
      "range": {
        "startLine": 1159,
        "startChar": 6,
        "endLine": 1159,
        "endChar": 7
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed45c3f3_ec32b474",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1159,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2020-05-08T09:19:51Z",
      "side": 1,
      "message": "The return value will depend on the implementation in the subclass. I\u0027ve documented what\u0027s generic but the doc of the subclass will add that precision.",
      "parentUuid": "76e92caa_1ec37ebc",
      "range": {
        "startLine": 1159,
        "startChar": 0,
        "endLine": 1159,
        "endChar": 7
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "391d7790_7878393b",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1159,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-11T05:51:31Z",
      "side": 1,
      "message": "I would still document that it returns a thing. Here a suggestion:\n\n    Returns:\n      An object of the type of the particular subclass.",
      "parentUuid": "ed45c3f3_ec32b474",
      "range": {
        "startLine": 1159,
        "startChar": 0,
        "endLine": 1159,
        "endChar": 7
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61c55fe5_1bc76bf3",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1159,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2020-05-11T08:19:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "391d7790_7878393b",
      "range": {
        "startLine": 1159,
        "startChar": 0,
        "endLine": 1159,
        "endChar": 7
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59d1b903_1bae62ea",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1255,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-07T08:01:26Z",
      "side": 1,
      "message": "s/A // or s/The // ; sounds strange otherwise.",
      "range": {
        "startLine": 1255,
        "startChar": 6,
        "endLine": 1255,
        "endChar": 8
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cd84ad6_f53218c8",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1255,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2020-05-08T09:19:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "59d1b903_1bae62ea",
      "range": {
        "startLine": 1255,
        "startChar": 6,
        "endLine": 1255,
        "endChar": 8
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5739f7fd_84a5afa0",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1429,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-07T08:01:26Z",
      "side": 1,
      "message": "Since you started using @abc.abstractmethod, would it make sense to use it here too? Probably the raises statement in the method can be removed as well?",
      "range": {
        "startLine": 1429,
        "startChar": 0,
        "endLine": 1429,
        "endChar": 32
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0df8d443_5d6b5a43",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1429,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2020-05-08T09:19:51Z",
      "side": 1,
      "message": "Yep, agreed. I\u0027ll do it in another CL.",
      "parentUuid": "5739f7fd_84a5afa0",
      "range": {
        "startLine": 1429,
        "startChar": 0,
        "endLine": 1429,
        "endChar": 32
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90457ad9_0ce76aa0",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1683,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-07T08:01:26Z",
      "side": 1,
      "message": "See earlier comments on how to handle encodings for version_inc and description.",
      "range": {
        "startLine": 1683,
        "startChar": 0,
        "endLine": 1683,
        "endChar": 53
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be979d03_df04ef5b",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1683,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2020-05-08T09:19:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "90457ad9_0ce76aa0",
      "range": {
        "startLine": 1683,
        "startChar": 0,
        "endLine": 1683,
        "endChar": 53
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db53a87a_dce90e50",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1684,
      "author": {
        "id": 1451494
      },
      "writtenOn": "2020-05-07T08:01:26Z",
      "side": 1,
      "message": "Just noticed that we are not passing around and populating the description field which ends up in VBMetaPrimaryAnnotation.",
      "range": {
        "startLine": 1684,
        "startChar": 0,
        "endLine": 1684,
        "endChar": 41
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3876a73e_8acaac0b",
        "filename": "aftltool.py",
        "patchSetId": 3
      },
      "lineNbr": 1684,
      "author": {
        "id": 1561651
      },
      "writtenOn": "2020-05-08T09:19:51Z",
      "side": 1,
      "message": "Ack, it should probably be in another CL though. I created 155967501 to track this bug.",
      "parentUuid": "db53a87a_dce90e50",
      "range": {
        "startLine": 1684,
        "startChar": 0,
        "endLine": 1684,
        "endChar": 41
      },
      "revId": "894f44157ec4e440a23eed8244b632a9ff5913ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}