{
  "comments": [
    {
      "key": {
        "uuid": "211bd82a_788cdd17",
        "filename": "avbtool",
        "patchSetId": 3
      },
      "lineNbr": 1752,
      "author": {
        "id": 1058768
      },
      "writtenOn": "2016-10-26T16:00:16Z",
      "side": 1,
      "message": "You also need to specify the FEC device in dm-verity arguments. Also, it would be prudent to use ignore_zero_blocks even if FEC is not used, in case we end up reading blocks that are unused by the file system, but don\u0027t actually contain zeros (which happens more often than one would like).",
      "range": {
        "startLine": 1752,
        "startChar": 0,
        "endLine": 1752,
        "endChar": 28
      },
      "revId": "a6ed8221b9cecf59207eeec5d3c50d5c6b9a5a3c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01c254c7_64556a0e",
        "filename": "avbtool",
        "patchSetId": 3
      },
      "lineNbr": 1752,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-10-26T16:15:56Z",
      "side": 1,
      "message": "Thanks for looking... FWIW, it works fine without specifying use_fec_from_device. In fact it doesn\u0027t actually work with use_fec_from_device, here\u0027s the output:\n\n [    1.166400] device-mapper: init: attempting early device configuration.\n [    1.167447] device-mapper: init: adding target \u00270 2063896 verity 1 PARTUUID\u003dd2d1d40a-8a5c-4c40-8a46-d7564d4e9b2b PARTUUID\u003dd2d1d40a-8a5c-4c40-8a46-d7564d4e9b2b 4096 4096 257987 257987 sha1 f0deae53e915ce58475da47979142922a0d236cb 489906ee52082a304104e4dcd34013d2b3f9062e 9 ignore_zero_blocks use_fec_from_device PARTUUID\u003dd2d1d40a-8a5c-4c40-8a46-d7564d4e9b2b fec_roots 2 fec_blocks 2056 fec_start 260020\u0027\n [    1.172065] tsc: Refined TSC clocksource calibration: 2793.249 MHz\n [    1.172818] clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x28435759590, max_idle_ns: 440795343271 ns\n [    1.174103] device-mapper: table: 253:0: verity: Invalid fec_blocks\n [    1.174811] device-mapper: init: starting dm-0 (vroot) failed\n\nwhen booting the kernel. Surely if use_fec_from_device if not specified it should just assume it\u0027s the same device, no? (I haven\u0027t read through dm-verity-fec.c yet).\n\nAs for ignore_zero_blocks, I can add that, sure. Can you elaborate on when this is supposed to happen?",
      "parentUuid": "211bd82a_788cdd17",
      "range": {
        "startLine": 1752,
        "startChar": 0,
        "endLine": 1752,
        "endChar": 28
      },
      "revId": "a6ed8221b9cecf59207eeec5d3c50d5c6b9a5a3c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "211bd82a_982f39bd",
        "filename": "avbtool",
        "patchSetId": 3
      },
      "lineNbr": 1752,
      "author": {
        "id": 1058768
      },
      "writtenOn": "2016-10-26T17:01:38Z",
      "side": 1,
      "message": "You actually need to specify use_fec_from_device to enable FEC. You are getting the error because fec_blocks should be the number of blocks covered by error correction, not the size of the FEC metadata. See also:\n\nhttps://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/drivers/md/dm-verity-fec.h#n41\nhttps://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/drivers/md/dm-verity-fec.c#n685\n\n\u003e Can you elaborate on when this is supposed to happen?\n\nIt\u0027s not supposed to happen, but it does. First, ext4 prefetches blocks that are outside the area marked as used and on some devices we fail to reliably clear these blocks (b/20881595). Furthermore, even fastboot flash won\u0027t clear unused blocks on some devices due to unrelated issues (b/32288104).",
      "parentUuid": "01c254c7_64556a0e",
      "range": {
        "startLine": 1752,
        "startChar": 0,
        "endLine": 1752,
        "endChar": 28
      },
      "revId": "a6ed8221b9cecf59207eeec5d3c50d5c6b9a5a3c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01a974f7_b2b95826",
        "filename": "avbtool",
        "patchSetId": 3
      },
      "lineNbr": 1752,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-10-26T20:04:37Z",
      "side": 1,
      "message": "OK, I see. So in the case that the FEC data immediately follows the data that it\u0027s protecting, fec_blocks and fec_start will be the same. I made that change and the device now boots with this cmdline:\n\n [    1.231486] device-mapper: init: attempting early device configuration.\n [    1.232716] device-mapper: init: adding target \u00270 2063896 verity 1 PARTUUID\u003dd2d1d40a-8a5c-4c40-8a46-d7564d4e9b2b PARTUUID\u003dd2d1d40a-8a5c-4c40-8a46-d7564d4e9b2b 4096 4096 257987 257987 sha1 6bc402f53c24b46254907da946043e27bbb7b2c7 4bc18ed5cbc1b2cfac97b826be9636cf0726bdae 9 ignore_zero_blocks use_fec_from_device PARTUUID\u003dd2d1d40a-8a5c-4c40-8a46-d7564d4e9b2b fec_roots 2 fec_blocks 260020 fec_start 260020\u0027\n [    1.238198] device-mapper: verity-fec: Woot, FEC has been set up!\n [    1.239482] device-mapper: init: dm-0 is ready\n [    1.269342] EXT4-fs (dm-0): mounted filesystem with ordered data mode. Opts: (null)\n\nRelated - is there a way to actually tell that FEC is being used? (Can\u0027t seem to find the usual device-mapper userspace ... I guess if I had that, I could just run dmsetup.)\n\nThe \"Woot, FEC has been set up!\" line is a DMWARN() line that I inserted at the end of verity_fec_ctr(). I guess that\u0027s enough evidence for now that FEC is being used?\n\n(And by \"for now\" I mean that for b/31264079 I will write an integration test that flips a bit and then verifies that dm-verity-fec properly corrects it.)\n\n\u003e (stuff about ignore_zero_blocks)\n\nInteresting, I\u0027ll read those bugs. Thanks!",
      "parentUuid": "211bd82a_982f39bd",
      "range": {
        "startLine": 1752,
        "startChar": 0,
        "endLine": 1752,
        "endChar": 28
      },
      "revId": "a6ed8221b9cecf59207eeec5d3c50d5c6b9a5a3c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "211bd82a_5b5d9b5b",
        "filename": "avbtool",
        "patchSetId": 3
      },
      "lineNbr": 1752,
      "author": {
        "id": 1058768
      },
      "writtenOn": "2016-10-26T20:20:44Z",
      "side": 1,
      "message": "\u003e is there a way to actually tell that FEC is being used?\n\nAndroid kernels create a sysfs entry for FEC, which provides a simple counter of corrected reads:\nhttps://android.googlesource.com/kernel/common/+/android-3.18/drivers/md/dm-verity-fec.c#673\n\nIf the file exists, FEC is set up for the device.\n\n\u003e I guess that\u0027s enough evidence for now that FEC is being used?\n\nYes. I think dm-verity successfully creating the device with FEC parameters should be sufficient even.\n\n\u003e I will write an integration test that flips a bit\n\nOr better yet, change every byte of one or more 4k blocks.",
      "parentUuid": "01a974f7_b2b95826",
      "range": {
        "startLine": 1752,
        "startChar": 0,
        "endLine": 1752,
        "endChar": 28
      },
      "revId": "a6ed8221b9cecf59207eeec5d3c50d5c6b9a5a3c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "211bd82a_58892106",
        "filename": "test/avbtool_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 824,
      "author": {
        "id": 1058768
      },
      "writtenOn": "2016-10-26T16:00:16Z",
      "side": 1,
      "message": "use_fec_from_device \u003cdevice\u003e",
      "range": {
        "startLine": 824,
        "startChar": 16,
        "endLine": 824,
        "endChar": 56
      },
      "revId": "a6ed8221b9cecf59207eeec5d3c50d5c6b9a5a3c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}