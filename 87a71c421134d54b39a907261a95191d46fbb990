{
  "comments": [
    {
      "key": {
        "uuid": "2b83433e_a303e8c7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-06-21T09:52:13Z",
      "side": 1,
      "message": "how about non-A/B device?",
      "range": {
        "startLine": 28,
        "startChar": 19,
        "endLine": 28,
        "endChar": 59
      },
      "revId": "87a71c421134d54b39a907261a95191d46fbb990",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "356ba31f_bb37aa57",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2017-06-21T13:42:01Z",
      "side": 1,
      "message": "This will also work for non-A/B devices since the caller of avb_slot_verify() will pass \"\" as |slot_suffix| so $(ANDROID_SYSTEM_PARTUUID) will be resolved as the partition GUID for the partition with the name \"system\" ... see sub_cmdline() in avb_slot_verify.c for more details.",
      "parentUuid": "2b83433e_a303e8c7",
      "range": {
        "startLine": 28,
        "startChar": 19,
        "endLine": 28,
        "endChar": 59
      },
      "revId": "87a71c421134d54b39a907261a95191d46fbb990",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd6567ee_c4b0a365",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-06-21T17:05:13Z",
      "side": 1,
      "message": "Sorry for not being clear.\n\nI meant for non-A/B, the root isn\u0027t system. (it\u0027s ramdisk in boot.img). In current avbtool, looks like it only adds root\u003dPARTUUID\u003d$(ANDROID_SYSTEM_PARTUUID) when \u0027setup_rootfs_from_kernel\u0027 or \u0027setup_as_rootfs_from_kernel\u0027 is specified when making vbmeta.img.",
      "parentUuid": "356ba31f_bb37aa57",
      "range": {
        "startLine": 28,
        "startChar": 19,
        "endLine": 28,
        "endChar": 59
      },
      "revId": "87a71c421134d54b39a907261a95191d46fbb990",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe5a61a8_c4e54222",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2017-06-21T18:36:20Z",
      "side": 1,
      "message": "If the system is using an initrd then the kernel simply ignores the root\u003d parameter and the initrd will mount the system partition (at /system). So this will work fine for non-A/B systems.\n\nBtw, this is also the case of A/B systems booting into recovery (for usual boot with A/B the bootloader will append skip_initramfs to the kernel cmdline).",
      "parentUuid": "fd6567ee_c4b0a365",
      "range": {
        "startLine": 28,
        "startChar": 19,
        "endLine": 28,
        "endChar": 59
      },
      "revId": "87a71c421134d54b39a907261a95191d46fbb990",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83e75414_ea782791",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-06-22T05:13:38Z",
      "side": 1,
      "message": "I see, nice info!\n\nI was just unsure whether root\u003d will be ignored in this case or not.",
      "parentUuid": "fe5a61a8_c4e54222",
      "range": {
        "startLine": 28,
        "startChar": 19,
        "endLine": 28,
        "endChar": 59
      },
      "revId": "87a71c421134d54b39a907261a95191d46fbb990",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10b92cec_8c0fae8d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-06-21T09:52:13Z",
      "side": 1,
      "message": "Just to confirm, bootloader still need to include this CL to make it happen. Right?",
      "range": {
        "startLine": 32,
        "startChar": 63,
        "endLine": 33,
        "endChar": 31
      },
      "revId": "87a71c421134d54b39a907261a95191d46fbb990",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "032af771_9580153d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2017-06-21T13:42:01Z",
      "side": 1,
      "message": "Absolutely. The point of the comment is that the bootloader won\u0027t have to special-case anything for when the VERIFICATION_DISABLED flag is set in the top-level vbmeta (unless it wants to).",
      "parentUuid": "10b92cec_8c0fae8d",
      "range": {
        "startLine": 32,
        "startChar": 63,
        "endLine": 33,
        "endChar": 31
      },
      "revId": "87a71c421134d54b39a907261a95191d46fbb990",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d70fb45_2634af4f",
        "filename": "libavb/avb_slot_verify.c",
        "patchSetId": 1
      },
      "lineNbr": 673,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-06-21T09:52:13Z",
      "side": 1,
      "message": "nit: should we move the two lines to #1131. So we don\u0027t have to comment there and leave this function only process vbmeta/descriptors?\n\nAlso, if load_requested_partitions() doesn\u0027t return AVB_SLOT_VERIFY_RESULT_OK, the root\u003d... won\u0027t be in cmdline. Is this expected?",
      "range": {
        "startLine": 672,
        "startChar": 0,
        "endLine": 673,
        "endChar": 80
      },
      "revId": "87a71c421134d54b39a907261a95191d46fbb990",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f49c2fb_37416ca3",
        "filename": "libavb/avb_slot_verify.c",
        "patchSetId": 1
      },
      "lineNbr": 673,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2017-06-21T13:42:01Z",
      "side": 1,
      "message": "\u003e nit:\n\nGood idea. I\u0027m doing that.\n\n\u003e Is this expected?\n\nYes, if load_requested_partitions() it will be a fatal failure so we\u0027ll end up not returning a AvbSlotVerifyResult object. I\u0027ll add a comment about that. However, with the change you suggested there is also now no doubt since cmdline is set later...",
      "parentUuid": "6d70fb45_2634af4f",
      "range": {
        "startLine": 672,
        "startChar": 0,
        "endLine": 673,
        "endChar": 80
      },
      "revId": "87a71c421134d54b39a907261a95191d46fbb990",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}