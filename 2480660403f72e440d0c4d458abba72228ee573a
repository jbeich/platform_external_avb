{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b09daafb_a12d53c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1078119
      },
      "writtenOn": "2024-01-16T22:30:54Z",
      "side": 1,
      "message": "Since descriptors are fairly similar now that we\u0027ve gotten the basic structure in place I went ahead and uploaded the remaining 3 descriptor implementations in this CL chain in case you want to just get it over with and review them all :) But we can definitely take them one by one as well.",
      "revId": "2480660403f72e440d0c4d458abba72228ee573a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e435261f_dd995a05",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2024-01-17T10:45:45Z",
      "side": 1,
      "message": "Make sense. Both work for me :)",
      "parentUuid": "b09daafb_a12d53c9",
      "revId": "2480660403f72e440d0c4d458abba72228ee573a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7894fe4f_8d24b960",
        "filename": "rust/tests/verify_tests.rs",
        "patchSetId": 2
      },
      "lineNbr": 734,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2024-01-17T11:02:00Z",
      "side": 1,
      "message": "Can we just do something like this?\n\n\n```suggestion\n    let expected_descriptor \u003d Descriptor::HashTree(\n        HashtreeDescriptorr {\n            ...\n    });\n    assert!(descriptors.contains(\u0026expected_descriptor));\n```",
      "range": {
        "startLine": 707,
        "startChar": 3,
        "endLine": 734,
        "endChar": 5
      },
      "revId": "2480660403f72e440d0c4d458abba72228ee573a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}