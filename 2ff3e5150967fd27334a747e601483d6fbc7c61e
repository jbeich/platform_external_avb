{
  "comments": [
    {
      "key": {
        "uuid": "ed4a9797_bc638132",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2016-12-01T10:23:51Z",
      "side": 1,
      "message": "Just to clarify, the plan is for fs_mgr to use avb_slot_verify() to verify all vbmeta structs (including main vbmeta + other partitions).\n\nThere are some concerns about using that on the main vbmeta, because load_and_verify_vbmeta() will:\n - Verify HASH descriptor, which is unnecessary.\n - Process KERNEL CMDLINE descriptor, which is unnecessary as well because we already boot up kernel and cannot change /proc/cmdline\n\nDo you think this is an issue?",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 15
      },
      "revId": "2ff3e5150967fd27334a747e601483d6fbc7c61e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "502fbc70_2ccfa06e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-12-01T14:39:07Z",
      "side": 1,
      "message": "Nope, not an issue at all - the CPU needed for this is very small.",
      "parentUuid": "ed4a9797_bc638132",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 15
      },
      "revId": "2ff3e5150967fd27334a747e601483d6fbc7c61e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed4a9797_5cfcfdfc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2016-12-01T17:01:36Z",
      "side": 1,
      "message": "OK, sounds good.\nI agree that sticking to libavb library for security verificatio is better.",
      "parentUuid": "502fbc70_2ccfa06e",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 15
      },
      "revId": "2ff3e5150967fd27334a747e601483d6fbc7c61e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed4a9797_dc6acd02",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2016-12-01T10:23:51Z",
      "side": 1,
      "message": "Does this main sense for non-vbmeta partitions?\n\nMore specifically, avb_slot_verify() just updates androidboot.vbmeta.{hash_alg, size, digest} before we compare that with calc_digest_of_vbmeta_images(). This seems unnecessary to me.\n\nps: androidboot.vbmeta.{hash_alg, size, digest} here resides in slot_data instead of /proc/cmdline because we already boot into kernel.\n\n  ...\n  if (!avb_slot_verify(ops, \u0026verify_data) !\u003d VERIFY_RESULT_OK-ish)\n  goto fail;\n  if (calc_digest_of_vbmeta_images(verify_data) !\u003d androidboot.vbmeta.digest)\n  goto fail;\n  ...\n\nHowever, comparing /proc/cmdlind: androidboot.vbmeta.{hash_alg, size, digest} for the main vbmeta makes sense to me. As the value is updated by the bootloader in previous stage for us to make sure /vbmeta can be trusted.",
      "range": {
        "startLine": 17,
        "startChar": 19,
        "endLine": 17,
        "endChar": 62
      },
      "revId": "2ff3e5150967fd27334a747e601483d6fbc7c61e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "502fbc70_8cb6ccd9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-12-01T14:39:07Z",
      "side": 1,
      "message": "I\u0027m not sure I understand the question.\n\nThe reason that all vbmeta structs - not just the one from the vbmeta partition - are included the androidboot.vbmeta.digest is that this way we can reason about all of them and not just the one in the \u0027vbmeta\u0027 partition.",
      "parentUuid": "ed4a9797_dc6acd02",
      "range": {
        "startLine": 17,
        "startChar": 19,
        "endLine": 17,
        "endChar": 62
      },
      "revId": "2ff3e5150967fd27334a747e601483d6fbc7c61e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed637725_a8106314",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2016-12-01T17:01:36Z",
      "side": 1,
      "message": "Sorry, I misunderstood it before. Please ignore my previous comment.",
      "parentUuid": "502fbc70_8cb6ccd9",
      "range": {
        "startLine": 17,
        "startChar": 19,
        "endLine": 17,
        "endChar": 62
      },
      "revId": "2ff3e5150967fd27334a747e601483d6fbc7c61e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed4a9797_3c99310c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2016-12-01T10:23:51Z",
      "side": 1,
      "message": "Does fs_mgr need to check rollback_indexes?\nI was under the impression that only bootloader checks this but not fs_mgr. \n\nAnd bootloader might not want to expose the rollback_indexes info to Android.",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 23
      },
      "revId": "2ff3e5150967fd27334a747e601483d6fbc7c61e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "502fbc70_acc39043",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-12-01T14:39:07Z",
      "side": 1,
      "message": "By relying on the androidboot.vbmeta.digest value we achieve that\n\n- fs_mgr does not need to check rollback indexes.\n- fs_mgr does not need to check the public key used to sign the root vbmeta struct\n\nSame holds for any other userspace app.\n\nAnd, yes, a key deciding factor for this is that we\n\n- don\u0027t want to expose to Android the stored_rollback_indexes[] values\n- don\u0027t want to expose to Android the public key used for root vbmeta struct",
      "parentUuid": "ed4a9797_3c99310c",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 23
      },
      "revId": "2ff3e5150967fd27334a747e601483d6fbc7c61e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed637725_081eb726",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2016-12-01T17:01:36Z",
      "side": 1,
      "message": "Noted, this is a good design.",
      "parentUuid": "502fbc70_acc39043",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 23
      },
      "revId": "2ff3e5150967fd27334a747e601483d6fbc7c61e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed4a9797_3c46519c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2016-12-01T10:23:51Z",
      "side": 1,
      "message": "Did you mean that we just hook no-ops for the two ops, as both are not required for non-vbmeta partitions.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 49
      },
      "revId": "2ff3e5150967fd27334a747e601483d6fbc7c61e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed4a9797_bc8c21c7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2016-12-01T10:23:51Z",
      "side": 1,
      "message": "is this validate_vbmeta_public_key()?",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 21
      },
      "revId": "2ff3e5150967fd27334a747e601483d6fbc7c61e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "502fbc70_ccc0c439",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-12-01T14:39:07Z",
      "side": 1,
      "message": "Yes, for both validate_vbmeta_public_key() (which is what I meant - new CL with fix coming up) and read_rollback_index() just hook ops that respectively return \u0027true\u0027 and 0.",
      "parentUuid": "ed4a9797_bc8c21c7",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 21
      },
      "revId": "2ff3e5150967fd27334a747e601483d6fbc7c61e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}