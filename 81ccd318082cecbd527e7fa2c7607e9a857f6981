{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "20e8e368_99e64825",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1863406
      },
      "writtenOn": "2023-03-16T06:47:17Z",
      "side": 1,
      "message": "Hello, maintainers\n\nCould you please review it?",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "752e518c_ba366780",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1863406
      },
      "writtenOn": "2023-03-21T03:33:53Z",
      "side": 1,
      "message": "Hello, maintainers\nI see the TreeHugger tests are failed.\n\nHow can i resolved it?",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65a75baf_c8a078e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2023-03-24T09:01:02Z",
      "side": 1,
      "message": "Hi,\nLooks like this change will cause some build errors in our internal branch.\n\n+ptosi@ to take a look.\n\nld.lld: error: undefined symbol: fopen\n\u003e\u003e\u003e referenced by avb_sysdeps_posix.c:68 (external/avb/libavb/avb_sysdeps_posix.c:68)\n\u003e\u003e\u003e               avb_sysdeps_posix.o:(avb_printv) in archive out/soong/.intermediates/packages/modules/Virtualization/pvmfw/libpvmfw/android_arm64_armv8-2a_cortex-a55_static/libpvmfw.a\n\nld.lld: error: undefined symbol: fclose\n\u003e\u003e\u003e referenced by avb_sysdeps_posix.c:79 (external/avb/libavb/avb_sysdeps_posix.c:79)\n\u003e\u003e\u003e               avb_sysdeps_posix.o:(avb_printv) in archive out/soong/.intermediates/packages/modules/Virtualization/pvmfw/libpvmfw/android_arm64_armv8-2a_cortex-a55_static/libpvmfw.a\nclang-16: error: linker command failed with exit code 1 (use -v to see invocation)",
      "parentUuid": "752e518c_ba366780",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66ad212e_b2ee0f9f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1882526
      },
      "writtenOn": "2023-03-24T11:49:44Z",
      "side": 1,
      "message": "This patch would break any baremetal use-case of libavb where `avb_sysdeps_posix.c` is used but they can\u0027t actually be fully POSIX compliant (U-Boot is another example, although they have their own fork of libavb).\n\nIf the logs generated by first stage init are lost anyway, can\u0027t it redirect `stderr` to `/dev/kmsg` using `dup2`? This would allow **all** its `fprintf(stderr` to be recorded and avoid adding use-case-specific code to this library.",
      "parentUuid": "65a75baf_c8a078e9",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fda8b56e_641c41e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1863406
      },
      "writtenOn": "2023-03-27T02:25:38Z",
      "side": 1,
      "message": "Yes, you\u0027r right.\nRather than fixing the library, I tried to redirect it from the init.\n\nSome devices come out normally, while others come out as below.\nSo i made a this patch. I\u0027ll check if there\u0027s another good way\n\n[    1.045961] [5:           init:    1] avb_slot_verify.c\n[    1.045966] [5:           init:    1] :\n[    1.045968] [5:           init:    1] 692\n[    1.045970] [5:           init:    1] : DEBUG:\n[    1.045972] [5:           init:    1] Loading vbmeta struct from partition \u0027\n[    1.045974] [5:           init:    1] vbmeta\n[    1.045976] [5:           init:    1] \u0027.",
      "parentUuid": "66ad212e_b2ee0f9f",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe2a9018_6f5b2742",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1882526
      },
      "writtenOn": "2023-03-27T05:38:02Z",
      "side": 1,
      "message": "Yeah, looking at the code, we would ideally want `avb_printv` to result in a single `write(/dev/kmsg)` call. WDYT of looking into using the CPP to produce a single `printf(stderr` by concatenating pre-compilation the literal C strings and some `\"%s\"`?",
      "parentUuid": "fda8b56e_641c41e7",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "499fd24e_f9b55e79",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1999521
      },
      "writtenOn": "2023-03-27T07:40:26Z",
      "side": 1,
      "message": "bold",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4b0a47f_3e820ff5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1863406
      },
      "writtenOn": "2023-03-27T09:14:46Z",
      "side": 1,
      "message": "That sounds great! \nIs it okay change C file(avb_sysdeps_posix.c) to CPP file(avb_sysdeps_posix.cpp or .cc)?\n\nWhat do others think of this?",
      "parentUuid": "fe2a9018_6f5b2742",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c512a711_e91d730d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1882526
      },
      "writtenOn": "2023-03-27T09:23:37Z",
      "side": 1,
      "message": "By \"CPP\", I meant [C Preprocessor](https://en.wikipedia.org/wiki/C_preprocessor), not C++ :) More specifically, using macros to produce successive literal strings that the preprocessor concatenates before they reach the compiler.",
      "parentUuid": "e4b0a47f_3e820ff5",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eef5a24b_c0f60d10",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1863406
      },
      "writtenOn": "2023-03-28T01:32:15Z",
      "side": 1,
      "message": "I understood it 😊 Thank you for more explain.\nI will make a new patch. I will be take a time due to build and test.",
      "parentUuid": "c512a711_e91d730d",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae7f038c_a3702dab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1863406
      },
      "writtenOn": "2023-04-03T07:49:59Z",
      "side": 1,
      "message": "Hello, @ptosi\n\nI think about various ways.\nIs it possible to use \"vfprintf\" function?",
      "parentUuid": "eef5a24b_c0f60d10",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad8e73bd_464a6c12",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1882526
      },
      "writtenOn": "2023-04-03T16:45:09Z",
      "side": 1,
      "message": "Yeah, I\u0027ve had a go at it in aosp/2520439; please LMK if this addresses your issue (code review welcome!).",
      "parentUuid": "ae7f038c_a3702dab",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa010df4_c6790fe1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1863406
      },
      "writtenOn": "2023-04-04T03:56:49Z",
      "side": 1,
      "message": "Thank you for reply. You already almost fixed it.\n\nI updated the version I modified. \nI will read a your patch and will be discuss about it 😊",
      "parentUuid": "ad8e73bd_464a6c12",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3efa2e3d_52334c77",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1882526
      },
      "writtenOn": "2023-04-04T08:23:37Z",
      "side": 1,
      "message": "Thanks, waiting for your review!\n\nNote that modifying the `avb_printv` signature as you did here is not acceptable as it will break client code given that they will now receive a call that doesn\u0027t match their implementation of `sysdeps`.",
      "parentUuid": "fa010df4_c6790fe1",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce168501_489e147a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1863406
      },
      "writtenOn": "2023-04-04T11:45:56Z",
      "side": 1,
      "message": "You worried about a some of problem situation.\nI don\u0027t know, but how can such a case happen? Could you tell me more explain?",
      "parentUuid": "3efa2e3d_52334c77",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44bef628_36f4ea4c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1882526
      },
      "writtenOn": "2023-04-04T12:22:04Z",
      "side": 1,
      "message": "The library internally relies on a set of functions (defined in [`avb_sysdeps.h`](https://cs.android.com/android/platform/superproject/+/master:external/avb/libavb/avb_sysdeps.h)) to abstract services provided by the underlying \"system\" and it is the responsibility of the client code to implement those functions on their platform. In the particular case of POSIX systems, the library provides a standard implementation ([`avb_sysdeps_posix.c`](https://cs.android.com/android/platform/superproject/+/master:external/avb/libavb/avb_sysdeps_posix.c)) for convenience, as the underlying interface is standard.\n\nThis means that function signatures in `sysdeps` must be stable, as client backends are written against them, and any modification would break clients of the library. In your patch, you modify not only the `avb_printv` implementation but also its interface (instead of taking a variable number of strings, it would now expose a `printf`-like API), which would clash with client code that still (rightfully) implements the old one.\n\nThis is why aosp/2520439 introduces a new `sysdeps` function (`avb_printf`) instead.",
      "parentUuid": "ce168501_489e147a",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "970b5a4c_7aa2e5ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1863406
      },
      "writtenOn": "2023-04-05T04:01:12Z",
      "side": 1,
      "message": "Thank you more explain about it.\n\nI am understood this situations and agreed with your opinion.\nI will review your code ASAP 👍",
      "parentUuid": "44bef628_36f4ea4c",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1dd8152_5933ac65",
        "filename": "libavb/avb_sysdeps_posix.c",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2023-03-17T16:46:48Z",
      "side": 1,
      "message": "Only nit here is that opening and closing `/dev/kmsg` could be wasteful but I also don\u0027t think we have a lot of logging in general so it\u0027s likely not a problem in practice.",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "923cb4e3_53c829c8",
        "filename": "libavb/avb_sysdeps_posix.c",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1863406
      },
      "writtenOn": "2023-03-20T00:00:20Z",
      "side": 1,
      "message": "Yes, you are right. \nI tried to find another way if I had printed a lot of logs.\n\nIf there is a lot of logs in the future, I will find another way and suggest it.\nThank you 👍",
      "parentUuid": "e1dd8152_5933ac65",
      "revId": "81ccd318082cecbd527e7fa2c7607e9a857f6981",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}